<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[java集合总结]]></title>
    <url>%2Fposts%2F429f090c%2F</url>
    <content type="text"><![CDATA[一、集合的基本概念总结 Collection(单列集合) List(有序，可重复) ArrayList 底层数据结构为数组，查询快，增删慢，线程不安全，效率高 Vector 底层数据结构为数组，查询快，增删慢，线程安全，效率低 LinkedList 底层数据结构为链表，查询慢，增删快，线程不安全，效率高 Set(无序，唯一) HashSet 底层数据结构为哈希表 哈希表依赖两个方法：hashCode()和equals() 执行顺序 首先判断hashCode()的值是否相同 是：执行equals()方法，看其返回值 是true:说明元素重复，不添加 是false：直接添加到集合 否：直接添加 最终：自动生成equals()和hashCode（)方法在目标类当中 LinkedHashSet 底层数据结构由链表和哈希表组成 链表保证元素有序 哈希表保证元素唯一 TreeSet 底层数据结构是红黑树（红黑树是一种自平衡的二叉树） 如何保证村的元素唯一性呢？ 根据比较的返回值是否为零来判断 如何保证元素的排序呢？ 自然排序（元素具备比较性）：让元素所属的类实现Comparable接口 比较器排序（集合具备比较性）：让集合接收一个Comparator的实现类对象 Map(双列集合) Map集合的数据结构只针对键有效,与值无关； 存储的是键值对的元素，键唯一，值可重复 HashMap 底层数据结构为哈希表,线程不安全，效率高 哈希表依赖两个方法：hashCode()和equals() 执行顺序 首先判断hashCode()的值是否相同 是：执行equals()方法，看其返回值 是true:说明元素重复，不添加 是false：直接添加到集合 否：直接添加 最终：自动生成equals()和hashCode（)方法在目标类当中 LinkedHashMap 底层数据结构由链表和哈希表组成 链表保证元素有序 哈希表保证元素唯一 Hashtable 底层数据结构为哈希表,线程安全，效率低 哈希表依赖两个方法：hashCode()和equals() 执行顺序 首先判断hashCode()的值是否相同 是：执行equals()方法，看其返回值 是true:说明元素重复，不添加 是false：直接添加到集合 否：直接添加 最终：自动生成equals()和hashCode（)方法在目标类当中 TreeMap 底层数据结构是红黑树（红黑树是一种自平衡的二叉树） 如何保证村的元素唯一性呢？ 根据比较的返回值是否为零来判断 如何保证元素的排序呢？ 自然排序（元素具备比较性）：让元素所属的类实现Comparable接口 比较器排序（集合具备比较性）：让集合接收一个Comparator的实现类对象##二、到底使用那种集合 看需求 是否是键值对对象形式： 是：Map 键是否需要排序 是：TreeMap 否：HashMap 不知道使用 HashMap 否：Collection 元素是否唯一 是 Set 元素是否需要排序: 是：TreeSet 否：HashSet 不知道使用HashSet 否 List 要安全吗: 要:Vector 不要：ArrayList或者LinkedList 增删多：LinkedList 查询多：ArrayList 不知道，使用ArrayList 不知道，使用ArrayList三、集合常见常见方法及遍历方式 Collection: add() remove() contains() iterator() size() 遍历 增强for 迭代器 List get() 遍历： 普通for Set Map put() remove() containskey(),containsValue() keySet() get() value() entrySet() size() 遍历： 根据键找值 根据键值对对象分别找键和值四.尾巴1.如有错误欢迎大家指出，我会及时更正，有什么不懂也可以留言提问，互相交流吗。2.也许大家觉得这没什么，但是我会认真对待，把它当成我的笔记、心得、这样才能提升自己。 欢迎访问我的csdn博客]]></content>
  </entry>
  <entry>
    <title><![CDATA[IDEA常用快捷键]]></title>
    <url>%2Fposts%2F566321e7%2F</url>
    <content type="text"><![CDATA[注意：## 一、常用快捷键1. 在IntelJ中和Eclipse中稍有不同，在Eclipse中，输入main再按Alt+/即可自动补全main函数，但是在IntellJ中则是输入psvm，选中即可.2. 在方法体内部有for循环，在IntellJ中是输入fori，然后会有一个提示，选中需要的for循环即可3. System.out.println();在IntellJ中是输入sout## .尾巴1.如有错误欢迎大家指出，我会及时更正，有什么不懂也可以留言提问，互相交流吗。2.也许大家觉得这没什么，但是我会认真对待，把它当成我的笔记、心得、这样才能提升自己。 欢迎访问我的csdn博客]]></content>
  </entry>
  <entry>
    <title><![CDATA[String、StringBuffer和StringBuilder详解]]></title>
    <url>%2Fposts%2Fd71e02a6%2F</url>
    <content type="text"><![CDATA[String操作详解StringBuilder&gt;StringBuffer&gt;Stringwhy?String:字符串常量StringBuffer:字符串变量StringBuilder:字符串变量从名字分析来看，String是一个常量，也就是它产生之后就不能被改变，那么等等看看下面的代码123String s = &quot;hello&quot;;s+=&quot;world&quot;;System.out.println(s);//结果为：&quot;helloworld&quot; 我们不是说String是字符串常量吗？哪为甚吗？它又改变值了呢？下面我们看一下内存图 首先我们要明确一下：字符串的直接赋值的方式是先到字符串常量池当中去找，如果没有就创建并返回，如果有就直接返回；字符串的另一个特性就是一旦被赋值就不能被改变；先说一下上面代码的执行过程：a:在栈内存当中执行String s = “hello”的代码，首先我们要判断”hello”这个字符串是否存在字符串常量池。b:如果”hello”不在字符串常量池当中，那么就创造一个，然后把”hello”的地址给s,赋值给s;c:当执行s+=”world”;时，由于字符串常量的特点，所以给”world”从新开一个空间。d:然后在从新开一个空间把两个串拼接在一起，把地址给s赋值给s;注意：我们说的字符串一旦创建就不能被改变，不是说的s不能被改变，而是说的”hello”字符串不能被改变从上面执行过程发现：没当用String进行操作的时候会创建好几个对象，所以这特别耗时和浪费空间，而StringBuffer和StringBuilder就不一样了，他们是字符串变量，是可以改变，所以在进行操作的时候是不用在内存当中新开辟一个空间的,直接调用append()方法在原先的空间后面添加就可以。2. String、StringBuffer和StringBuilder的区别？ 1. String 是内容不可变得，而其他两者内容是可以改变的； 2. StringBuffer是同步的，数据安全，效率低；StringBuilder是不同步的，数据不安全，效率高。（以上所的是多线程）3. StringBuffer和数组的区别？ 二者都可以看做是一个装数据的容器，但是呢，StringBuffer是一个字符串数据，而数组可以是任何类型的数据，但是必须是同一类型。4. 形式参数问题 1. String作为形式参数传递，把String当成一个基本数据类型； 2. StringBuffer作为形式参数 1. 基本类型：形式参数的改变不影响实际参数。 2. 引用类型：形式参数的改变直接影响实际参数。注意：String作为形式参数和基本类型一样，因为它在内存中的位置不一样，所以是一个特殊的类 .尾巴1.如有错误欢迎大家指出，我会及时更正，有什么不懂也可以留言提问，互相交流吗。 欢迎访问我的csdn博客]]></content>
  </entry>
  <entry>
    <title><![CDATA[test]]></title>
    <url>%2Fposts%2Fd87f7e0c%2F</url>
    <content type="text"><![CDATA[注意：## 一、背景 （背景之前放一张图片比较好看）## .尾巴1.如有错误欢迎大家指出，我会及时更正，有什么不懂也可以留言提问，互相交流吗。2.也许大家觉得这没什么，但是我会认真对待，把它当成我的笔记、心得、这样才能提升自己。 欢迎访问我的csdn博客]]></content>
  </entry>
  <entry>
    <title><![CDATA[CentOs7安装hadoop3(三)]]></title>
    <url>%2Fposts%2F50c37adb%2F</url>
    <content type="text"><![CDATA[注意：## 一、背景 （背景之前放一张图片比较好看）1$ netstat -ano | more //这个命令查看 hadoop的端口号将ssh的公钥发送给其他节点1$ scp ~/.ssh/id_rsa.pub root@s102:~/.ssh/authorized_keys如果不明白scp命令请看Linux之cp/scp命令＋scp命令详解hadoop中路径是没有副本概念，只有文件的本身才有副本的概念hdfs根本不存在文件夹我们需要将每台linux都生成公钥和私钥吗？不需要，我们只要把方式那个名称节点的主机，生成一台公钥和私钥就行了（因为只有名称节点会访问其他主机的），然后将公钥发送给其他节点把每一个hadoop文件复制到每一个节点当中1$ rsync -rvl /usr/hadoop/* root@s101:/usr/hadoop自定义一个脚本，拷贝文件到每一个节点的相同目录下自己编写的脚本文件放在usr/local/bin文件夹下自定义脚本： xsync目的在于在集群上分发文件；123456789101112131415161718192021#/!bin/bashpcount=$#;if ((pcount&lt;1)); then echo no args; exit;fip1=$1;fname=`basename $p1`;#echo fname=$fname;#获取上级目录的绝对路径pdir=`cd -P $(dirname $p1); pwd`;#echo $pdir;#获取当前用户名cuser=`whoami`#循环for((host=101;host&lt;105;host=host+1));do echo --------s$host---------- rsync -rvl $pdir/$fname $cuser@s$host:$pdirdone编写/usr/local/bin/xcall脚本，在所有主机上执行相同的命令；用法：xcall 命令123456789101112#/!bin/bashpcount=$#;if ((pcount&lt;1)); then echo no args; exit;fi#循环for((host=100;host&lt;105;host=host+1));do echo --------s$host---------- ssh s$host $@done配置完全分布式：修改配置文件1. core-site.xml //1fs.defaultFS=hdfs://s100/2. yarn-site.xml1yarn.resourcemanager.hostname=s1003. hdfs-site.xml1replication=3 //设置三个节点hadoop当中用etc/hadoop/workers代替etc/hadoop/Slaves文件都是存储DATANODE（数据节点主机名的地方）vi workers 文件在集群上分发以上三个文件（用自定义脚本，进入要分发文件的路径，然后进行分发）整理hadoop的类库和所有文件抽取所有的xml文件【core-default.xml】【hdfs-default.xml】【yarn-default.xml】【mapred-default.xml】设置一个SNN节点在s104上1234567&lt;property&gt; &lt;name&gt;dfs.namenode.secondary.https-address&lt;/name&gt; &lt;value&gt;s104:50090&lt;/value&gt; &lt;description&gt; The secondary namenode HTTPS server address and port. &lt;/description&gt;&lt;/property&gt;设置具体的文件目录修改 core-site.xml 加入下面的代码12345&lt;property&gt; &lt;name&gt;hadoop.tmp.dir&lt;/name&gt; &lt;value&gt;/home/root/hadoop3&lt;/value&gt; &lt;description&gt;A base for other temporary directories.&lt;/description&gt;&lt;/property&gt;## .尾巴1.如有错误欢迎大家指出，我会及时更正，有什么不懂也可以留言提问，互相交流吗。2.也许大家觉得这没什么，但是我会认真对待，把它当成我的笔记、心得、这样才能提升自己。 欢迎访问我的csdn博客]]></content>
  </entry>
  <entry>
    <title><![CDATA[linux常用命令]]></title>
    <url>%2Fposts%2Ffe4ef317%2F</url>
    <content type="text"><![CDATA[一、vi编辑器 查看行号1$ :set number 二、解压和压缩12$ tar -xzvf 文件名 //解压文件$ tar zcvf FileName.tar.tgz FileName //压缩文件 三常用错误提示1Permission denied //这是没有权限 Linux主机之间互相传文件···$ scp ~/.ssh/id_rsa.pub root@s102:~/.ssh/authorized_keys$ rsync //用的人很多。远程同步工具，用于备份和镜像，支持链接备份，算法好，避免复制同样的元素。··· rsync 的使用 Rsync 简介rsync命令是一个远程数据同步工具，可通过LAN/WAN快速同步多台主机间的文件。rsync使用所谓的“rsync算法”来使本地和远程两个主机之间的文件达到同步，这个算法只传送两个文件的不同部分，而不是每次都整份传送，因此速度相当快，并且支持链接复制等，是一款很强大的工具，很多人都会用。 安装配置123//这是在源主机上的配置$ yum -y install rsync //安装$ vi /etc/rsync_exclude.lst //配置要排除复制的文件和目录 1//在目标主机上配置 $ yum -y install rsync //一样先安装12345678[rsync命令](http://man.linuxde.net/rsync)[CentOS 7.2 部署Rsync务](http://blog.csdn.net/wh211212/article/details/53054470)[shell脚本中执行时提示“没有那个文件或目录”的解决办法](http://www.jb51.net/article/48784.htm)## 网卡启动失败的[centos7 无法启动网络(service network restart)错误解决办法 (eno)](http://blog.csdn.net/qiaoliang328/article/details/54667421)centos7网卡配置文件当中有一个UUID，他的值就是网卡的MAC地址。 nmcli con show //查看UUID的值 ``` 查看Linux网卡UUID和MAC地址—Linux命令 .尾巴1.如有错误欢迎大家指出，我会及时更正，有什么不懂也可以留言提问，互相交流吗。2.也许大家觉得这没什么，但是我会认真对待，把它当成我的笔记、心得、这样才能提升自己。 欢迎访问我的csdn博客]]></content>
  </entry>
  <entry>
    <title><![CDATA[CentOs7安装hadoop3（二）]]></title>
    <url>%2Fposts%2Fb24ffb1%2F</url>
    <content type="text"><![CDATA[一、准备工作 配置hadoop环境变量12345$ vi /etc/profile export HADOOP_HOME=/usr/hadoop export PATH=$PATH:$HADOOP_HOME/sbin:$HADOOP_HOME/bin:wq$ source /etc/profile 然后通过Hadoop version查看结果 二、搭建伪分布式 进入配置文件目录12$ cd /usr/hadoop/etc/hadoop/$ ls 配置core-site.xml 文件 vi core-site.xml 12345// 在&lt;configuration&gt; 标签里面加上以下代码&lt;property&gt; &lt;name&gt;fs.defaultFS&lt;/name&gt; &lt;value&gt;hdfs://localhost/&lt;/value&gt; //默认端口为：8020；&lt;/property&gt; 配置hdfs-site.xml 文件 vi hdfs-site.xml 12345// 在&lt;configuration&gt; 标签里面加上以下代码&lt;property&gt; &lt;name&gt;dfs.replication&lt;/name&gt; //副本数 &lt;value&gt;1&lt;/value&gt; //伪分布式一额节点&lt;/property&gt; 配置 mapred-site.xml 文件 vi mapred-site.xml 12345// 在&lt;configuration&gt; 标签里面加上以下代码&lt;property&gt; &lt;name&gt;mapreduce.framework.name&lt;/name&gt; &lt;value&gt;yarn&lt;/value&gt;&lt;/property&gt; 配置 yarn-site.xml 文件 vi yarn-site.xml 12345678&lt;property&gt; &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt; &lt;value&gt;localhost&lt;/value&gt;&lt;/property&gt;&lt;property&gt; &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt; &lt;value&gt;mapreduce_shuffle&lt;/value&gt;&lt;/property&gt; 初始化化hdfs ：hadoop namenode -format（这就像从新安装系统一样） 7.启动 start-all.sh 注意：这是甚吗？？？？这是由于缺少用户定义所以我们要分别对启动和关闭脚本进行配置 配置 start-dfs.sh 和 stop-dfs.sh 123456//把以下代码复制到文件的空白处 ：wq 保存退出HDFS_DATANODE_USER=rootHDFS_DATANODE_SECURE_USER=hdfsHDFS_NAMENODE_USER=rootHDFS_SECONDARYNAMENODE_USER=root 配置 start-yarn.sh 和 stop-yarn.sh 1234//把以下代码复制到文件的空白处 ：wq 保存退出YARN_RESOURCEMANAGER_USER=rootHADOOP_SECURE_DN_USER=yarnYARN_NODEMANAGER_USER=root 这次在运行 start-all.sh 使用jps查看进程 红框内的5个进程缺一不可，如果没有有一个没有启动，必须关闭所有所有经常，从新启动；三、SSH安装与使用 为甚吗要安装SSH？众所周知，hadoop是集群部署的，假如你有个上千台服务器，当hadoop互相访问的时候，你一个一个互相输入登陆密码，你是不是会疯。所有SSH就能让你互相免密登陆，解决手动输入密码的问题。 SSH怎么解决的免密登陆问题？3.怎么设置呢？1$ rpm -qa | grep ssh //查询是否安装 如图就是安装了SSH 如果没有请通过下面代码安装 1$ yum install openssh 生成密钥 1$ ssh-keygen -t rsa 进入ssh密钥目录，把公钥复制一份发往目标主机 123$ cd ~/.ssh$ ls$ cp id_rsa.pub ~./ssh/authorized_keys //以自身主机为例 登陆一下 1$ ssh localhost 如图结果,代表成功。 四、尾巴 如有错误欢迎大家指出，我会及时更正，有什么不懂也可以留言提问，互相交流吗。 这次搭建遇到了很多问题，如果想最快的解决问题，还是要看它报甚吗错，一个一个错误的排查，这样更能让你快速的解决问题，也能让自己更加进步。如果是在看不懂问题的所在出，请baidu一下，会有网友遇到你也曾经遇到的坑的； 也许大家觉得这没什么，但是我会认真对待，把它当成我的笔记、心得、这样才能提升自己。 欢迎访问我的csdn博客]]></content>
  </entry>
  <entry>
    <title><![CDATA[CentOs7安装hadoop3.0(一)]]></title>
    <url>%2Fposts%2Fe41077e7%2F</url>
    <content type="text"><![CDATA[一、准别工作需要安装java环境，如果需要请看我Centos7安装jdk 二、下载去阿帕奇官网下载hadoop（这里以hadoop3.0为主，如果需要其他版本自己去官网下载）下载hadoop3.0 三、上传到CentOs7然后解压安装12$ rz -e //上传文件$ tar -xzvf hadoop-3.0.0.tar.gz //解压 结果为：1$ cp -rf hadoop-3.0.0 /usr/hadoop //复制到usr/hadoop目录或者自己新建的目录也可以； 然后进入hadoop的bin目录1$ cd /usr/hadoop/bin 输入命令验证版本号1$ ./hadoop version 如果截图为：说明你安装成功了，如果不是这样那么请reboot重启一下系统就好了。 四、尾巴1.如有错误欢迎大家指出，我会及时更正，有什么不懂也可以留言提问，互相交流吗。2.也许大家觉得这没什么，但是我会认真对待，把它当成我的笔记、心得、这样才能提升自己。 欢迎访问我的csdn博客]]></content>
      <categories>
        <category>hadoop</category>
      </categories>
      <tags>
        <tag>linux hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Centos7卸载自带jdk]]></title>
    <url>%2Fposts%2Fc459be10%2F</url>
    <content type="text"><![CDATA[一.背景 一般来讲Centos7会自带一个openJdk 显然这不是sun公司的，所有我们在干活之前，要把这个卸载掉，安装上sun的jdk;二.卸载 查看是否安装了openJdk1$ rpm -qa | grep java 结果为： 把箭头指向的内容卸载掉 注意：箭头没有指向的不要删除···$ rpm -e –nodeps 你所要卸载的jdk···输入命令查一下，如图所示代表，卸载完成三.安装sun公司的jdk 下载 官官网下载jdk1.8rpm安装包 下载完之后 用xshell工具rz -e 命令上传到服务器 如果没有这个命令用 yum -y install lrzsz 安装 解压安装 1$ rpm -ivh jdk-8u161-linux-x64.rpm //后面输入的是你下载的jdk版本 输入java-version 结果如图 就带表安装成功了 注意：jdk默认安装在/usr/java 下 四.尾巴1.如有错误欢迎大家指出，我会及时更正，有什么不懂也可以留言提问，互相交流吗。2.也许大家觉得这没什么，但是我会认真对待，把它当成我的笔记、心得、这样才能提升自己。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux笔记 jdk</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hadoop学习Linux访问宿主机防火墙问题]]></title>
    <url>%2Fposts%2F31cddb20%2F</url>
    <content type="text"><![CDATA[一.背景： 在学习大数据的时候，往往需要宿主机和虚拟机之间互相访问，所以我们需要把linux和windows的防火墙都关闭； 而关闭windows的防火墙就有一个安全隐患，而且每次开启关闭的很烦人，所以就有了今天的解决办法；二.解决方案 利用windows防火墙里面的高级工具（废话不多说，上图）点击类别，选择小图标选择防火墙点击高级设置点击入站规则,右键新建规则点击程序,然后点击下一步然后点击所有程序，也可以选定特定的程序（但是我没有找到Vmware具体的是那个程序）允许链接默认三个就行最后起好名称，描述一下，完成就行了；2.最后测试一下，打开防火墙，ping一下，通了，就成功了； 三.最后说一下 如果有什么地方不对，欢迎在下面评论写出。 最后希望自己从今天这篇文章开始一天一个博客，提升自己的能力，加油。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>hadoop linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[工厂模式]]></title>
    <url>%2Fposts%2F54788f73%2F</url>
    <content type="text"><![CDATA[一、背景在面向对象编程的时候，经常遇到的是new一下，然后产生一个对象，但是在一些情况下new一个对象会产生很多问题。例如：许多类型的创造需要一些列的步骤：你可能需要计算或者取得对象的初始设置、选择生成那个子对象实例、或在你生成子对象之前必须先生成一些列的辅助功能对象；在这种情况下新对象的创建就是一个过程，就不是一个操作，像一个机器当中的齿轮传动，需要各个齿轮的配合； 问题：怎样很容易的创建对象呢？？？解决方案：利用工厂模式创建对象；二、分类工厂模式主要是为创建对象提供过渡接口，以便将创建的具体过程屏蔽起来，达到提高灵活性的目的； 分类： 简单工厂模式 普通简单工厂 多方法简单工厂 静态方法简单工厂 工厂方法模式（Factory Method） 单例模式（Singleton） 三、简单工厂模式普通简单工厂模式就是建一个普通的工厂类,对实现同一接口的一些类进行创建 如图： 举例如下：（我们打算用一个发送邮件和发送短信的例子）首先创建二者的共同接口： 123public interface Sender &#123;//此接口主要是实现发送功能 public void send();//次方法是实现发送的；&#125; 其次是创建实现类： 123456public class MailSender implements Sender &#123; @Override public void send() &#123; System.out.println(&quot;这是一个发送邮件的&quot;); &#125;&#125; 12345678public class SmsSender implements Sender &#123; @Override public void send() &#123; System.out.println(&quot;这是发送短息的&quot;); &#125;&#125; 最后创建工厂类： 123456789101112131415public class SendFactory &#123; public Sender produce(String type)&#123;//这个参数代表这对象的类型 if (&quot;mail&quot;.equals(type)) &#123; //这个是如果传入的类型是邮件的话 就返回一个邮件的对象； return new MailSender(); &#125; else if (&quot;sms&quot;.equals(type))&#123; //这个是发短信 return new SmsSender(); &#125; else&#123; System.out.println(&quot;请输入正确的类型&quot;); return null; &#125; &#125;&#125; 测试代码： 12345public static void main(String[] args) &#123; SendFactory factory = new SendFactory(); Sender sms = factory.produce(&quot;sms&quot;); sms.send(); &#125; 结果如下：可以说明创建一个工厂类，通过传递参数就可以解决创建一个对象的；很方便；]]></content>
      <categories>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>学习 Java Java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML5桌面通知：Notification-API]]></title>
    <url>%2Fposts%2F7a8c60b0%2F</url>
    <content type="text"><![CDATA[初识 之前用chrom浏览器看视频的时候，总会收到这样桌面通知（如下图）就思考这是怎么实现的，直到头几天在掘金上发现有人写的Notification-API的教程； 什么是H5 Notification ？？？ Notification是H5特别好的一个新特性，Notification可以实现类似桌面软件一样把通知显示在电脑的又下角，这样就算你在全屏看视频的时候也可以看到这个消息的通知，比如你正在看战狼2，看的正激烈，你的公司给你发了一个项目的bug的邮件，需要及时解决，如果你的邮件用了Notification就不至于错过了；所以这也是现在Notification这么流行的原因。 实现 最核心的就是window下面的Notification() Notification()的第一个参数是消息的头部 第二个参数是具体的信息，其中body代表网站的介绍。icon代表网站的logo1234var notification = new Notification(&quot;欢迎来自it科技论坛&quot;, &#123;body:&apos;谢谢你，如果喜欢此网站的话请多多访问。&apos;, icon:&apos;https://cdn2.iconfinder.com/data/icons/ios-7-style-metro-ui-icons/512/MetroUI_HTML5.png&apos;, dir:&apos;auto&apos;&#125;); Notification.requestPermission() 这个方法执行时浏览器会发送请求，请求浏览器允许不允许显示； 123456789101112Notification.requestPermission(function(status) &#123; //status是授权状态，如果用户允许显示桌面通知，则status为&apos;granted&apos; console.log(&apos;status: &apos; + status); //permission只读属性 var permission = Notification.permission; //default 用户没有接收或拒绝授权请求 不能显示通知 //granted 用户接受授权请求 允许显示通知 //denied 用户拒绝授权请求 不允许显示通知 console.log(&apos;permission: &apos; + permission);&#125;); 其实到这里你就可以用Notification了； 扩展 onshow的方法是当消息展示出来的触发一些操作，比如给我们的服务器端发送信息，或者给我们的设置一个时间使我们的消息自动关闭； 123456789//onshow函数在消息框显示时会被调用 //可以做一些数据记录及定时操作等 notification.onshow = function() &#123; console.log(&apos;notification shows up&apos;); //5秒后关闭消息框 setTimeout(function() &#123; notification.close(); &#125;, 10000); &#125;; 设置消息点击事件监听；我们可以自定义做很多事情； 123456//消息框被点击时被调用 //可以打开相关的视图，同时关闭该消息框等操作 notification.onclick = function() &#123; alert(&apos;非常感谢访问我们，请点击确认访问我们吧&apos;); notification.close(); &#125;; 当发生错误的时候会触发此方法，或者浏览器拒绝我们显示小心的时候，也会触发 123456//当有错误发生时会onerror函数会被调用//如果没有granted授权，创建Notification对象实例时，也会执行onerror函数notification.onerror = function() &#123; console.log(&apos;Notification发生错误可能没有授权&apos;); //do something useful&#125; 当关闭消息的时候会执行，也可以 做一下后台的统计计算； 123456//一个消息框关闭时onclose函数会被调用 notification.onclose = function() &#123; console.log(&apos;notification 被关闭了&apos;); //do something useful &#125;;&#125;); 总结以上就是我学习关于Notification的见解，如果有错误请在下面评论我会及时改正；]]></content>
      <categories>
        <category>前端-H5</category>
      </categories>
      <tags>
        <tag>H5 学习笔记</tag>
      </tags>
  </entry>
</search>
